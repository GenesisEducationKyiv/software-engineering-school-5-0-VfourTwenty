name: Integration Tests

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL_TEST: postgres://postgres:alwayssunny@db:5432/weather_db_test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Start Docker Compose db service
        run: |
          docker-compose -f docker-compose.test.yml up -d db_test
          # Wait for PostgreSQL to be ready
          until docker-compose -f docker-compose.test.yml exec -T db_test pg_isready -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          # Create test database if it doesn't exist
          docker-compose -f docker-compose.test.yml exec -T db_test psql -U postgres -c "CREATE DATABASE weather_db_test;"
        env:
          DATABASE_URL_TEST: postgres://postgres:alwayssunny@db_test:5432/weather_db_test

      - name: Run migrations and tests
        run: npm run test:integration:docker
        env:
          DATABASE_URL_TEST: postgres://postgres:alwayssunny@db_test:5432/weather_db_test

      - name: Debug logs on failure
        if: failure()
        run: |
          docker-compose -f docker-compose.test.yml logs db_test
          docker-compose -f docker-compose.test.yml logs test_integration